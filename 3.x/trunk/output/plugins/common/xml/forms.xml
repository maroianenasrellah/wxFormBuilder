<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com
-->
<package name="Forms" lib="libcommon" icon="frame16x16.png" desc="wxWidgets windows">
  <objectinfo class="wxTopLevelWindow" smallIcon="wxwindow.png"  type="interface">
    <event name="OnActivate" class="wxActivateEvent" help="Process a wxEVT_ACTIVATE event." />
    <event name="OnActivateApp" class="wxActivateEvent" help="Process a wxEVT_ACTIVATE_APP event." />
    <event name="OnClose" class="wxCloseEvent" help="Process a close event." />
	<event name="OnHibernate" class="wxActivateEvent" help="Process a hibernate event, supplying the member function. This event applies to wxApp only, and only on Windows SmartPhone and PocketPC. It is generated when the system is low on memory; the application should free up as much memory as possible, and restore full working state when it receives a wxEVT_ACTIVATE or wxEVT_ACTIVATE_APP event." />
	<event name="OnIconize" class="wxIconizeEvent" help="Process a wxEVT_ICONIZE event."/>
    <event name="OnIdle" class="wxIdleEvent" help="Process a wxEVT_IDLE event." />
  </objectinfo>
  
  <objectinfo class="Frame" icon="frame.xpm" type="form">
	<inherits class="wxTopLevelWindow" />
	<inherits class="wxWindow">
		<property name="window_style">wxTAB_TRAVERSAL</property>
		<property name="size" type="wxSize">500,300</property>
	</inherits>
	<property name="name" type="text" hidden="1">MyFrame</property>
    <property name="title" type="wxString_i18n" />
    <property name="style" type="bitlist">
      <option name="wxDEFAULT_FRAME_STYLE" help="Defined as wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION | wxCLOSE_BOX | wxCLIP_CHILDREN" />
      <option name="wxICONIZE" help="Display the frame iconized (minimized). Windows only."/>
      <option name="wxCAPTION" help="Puts a caption on the frame."/>
      <option name="wxMINIMIZE" help="Identical to wxICONIZE. Windows only."/>
      <option name="wxMINIMIZE_BOX" help="Displays a minimize box on the frame."/>
      <option name="wxMAXIMIZE" help="Displays the frame maximized. Windows only."/>
      <option name="wxMAXIMIZE_BOX" help="Displays a maximize box on the frame." />
      <option name="wxCLOSE_BOX" help="Displays a close box on the frame." />
      <option name="wxSTAY_ON_TOP" help="Stay on top of all other windows, see also wxFRAME_FLOAT_ON_PARENT."/>
      <option name="wxSYSTEM_MENU" help="Displays a system menu."/>
      <option name="wxRESIZE_BORDER" help="Displays a resizeable border around the window."/>
      <option name="wxFRAME_TOOL_WINDOW" help="Causes a frame with a small titlebar to be created; the frame does not appear in the taskbar under Windows or GTK+."/>
      <option name="wxFRAME_NO_TASKBAR" help="Creates an otherwise normal frame but it does not appear in the taskbar under Windows or GTK+ (note that it will minimize to the desktop window under Windows which may seem strange to the users and thus it might be better to use this style only without wxMINIMIZE_BOX style). In wxGTK, the flag is respected only if GTK+ is at least version 2.2 and the window manager supports _NET_WM_STATE_SKIP_TASKBAR hint. Has no effect under other platforms."/>
      <option name="wxFRAME_FLOAT_ON_PARENT" help="The frame will always be on top of its parent (unlike wxSTAY_ON_TOP). A frame created with this style must have a non-NULL parent."/>
      <option name="wxFRAME_SHAPED" help="Windows with this style are allowed to have their shape changed with the SetShape method."/>
	  wxDEFAULT_FRAME_STYLE
	</property>
    <property name="extra_style" type="bitlist">
	  <option name="wxFRAME_EX_CONTEXTHELP" help="Under Windows, puts a query button on the caption. When pressed, Windows will go into a context-sensitive help mode and wxWidgets will send a wxEVT_HELP event if the user clicked on an application window. You cannot use this style together with wxMAXIMIZE_BOX or wxMINIMIZE_BOX, so you should use wxDEFAULT_FRAME_STYLE & ~ (wxMINIMIZE_BOX | wxMAXIMIZE_BOX) for the frames having this style (the dialogs don't have a minimize or a maximize box by default). Note: The Project's &quot;help_provider&quot; property must be set for context-sensitive help to work."/>
      <option name="wxFRAME_EX_METAL" help="On Mac OS X, frames with this style will be shown with a metallic look. This is an extra style."/>
	</property>
	<property name="center" type="option"		help="Centers the dialog box on the display in the chosen direction.">
	  <option name=""/>
      <option name="wxHORIZONTAL"/>
      <option name="wxVERTICAL"/>
      <option name="wxBOTH"/>
	</property>
	<property name="xrc_skip_sizer" type="bool" help="For XRC Only. Do not generate the first sizer if there is only one child.">1</property>
	<property name="event_handler" type="option" help="For C++ Only.&#x0A;The way how to declare and implement event handlers.">
	  <option name="decl_pure_virtual" help="Only declare event handlers as pure virtual methods."/>
	  <option name="decl" help="Declare event handlers but don't generate default implementation. Implementation should be done in separate .cpp file (Not in a generated!)."/>
	  <option name="impl_virtual" help="Declare event handlers as virtual methods and generate default implementation."/>
	  impl_virtual
	</property>
  </objectinfo>

  <objectinfo class="Panel" icon="panel.xpm" type="form">
	<inherits class="wxWindow">
		<property name="window_style">wxTAB_TRAVERSAL</property>
		<property name="size" type="wxSize">500,300</property>
	</inherits>
    <property name="name" type="text" hidden="1">MyPanel</property>
	<property name="event_handler" type="option" help="For C++ Only.&#x0A;The way how to declare and implement event handlers.">
	  <option name="decl_pure_virtual" help="Only declare event handlers as pure virtual methods."/>
	  <option name="decl" help="Declare event handlers but don't generate default implementation. Implementation should be done in separate .cpp file (Not in a generated!)."/>
	  <option name="impl_virtual" help="Declare event handlers as virtual methods and generate default implementation."/>
	  impl_virtual
	</property>
	<event name="OnInitDialog" class="wxInitDialogEvent" help="Process a wxEVT_INIT_DIALOG event. A wxEVT_INIT_DIALOG is sent as a dialog or panel is being initialised." />
  </objectinfo>

  <objectinfo class="Dialog" icon="dialog.xpm" type="form" base="wxDialog">
    <inherits class="wxTopLevelWindow" />
	<inherits class="wxWindow" />
    <property name="name" type="text" hidden="1">MyDialog</property>
    <property name="title" type="wxString_i18n" />
    <property name="style" type="bitlist">
      <option name="wxCAPTION" 					help="Puts a caption on the dialog box." />
      <option name="wxDEFAULT_DIALOG_STYLE" 	help="Equivalent to a combination of wxCAPTION, wxCLOSE_BOX and wxSYSTEM_MENU (the last one is not used under Unix)" />
      <option name="wxRESIZE_BORDER" 			help="Display a resizeable frame around the window." />
      <option name="wxSYSTEM_MENU"				help="Display a system menu."/>
      <option name="wxCLOSE_BOX"				help="Displays a close box on the dialog." />
      <option name="wxMAXIMIZE_BOX" 			help="Displays a maximize box on the dialog." />
      <option name="wxMINIMIZE_BOX"				help="Displays a minimize box on the dialog." />
      <option name="wxSTAY_ON_TOP"				help="The dialog stays on top of all other windows." />
      <option name="wxDIALOG_NO_PARENT"			help="By default, a dialog created with a NULL parent window will be given the application's top level window as parent. Use this style to prevent this from happening and create an orphan dialog. This is not recommended for modal dialogs."/>
	  wxDEFAULT_DIALOG_STYLE
	</property>
	<property name="extra_style" type="bitlist">
	  <option name="wxDIALOG_EX_CONTEXTHELP"	help="Under Windows, puts a query button on the caption. When pressed, Windows will go into a context-sensitive help mode and wxWidgets will send a wxEVT_HELP event if the user clicked on an application window. Note: The Project's &quot;help_provider&quot; property must be set for context-sensitive help to work."/>
      <option name="wxDIALOG_EX_METAL" 			help="On Mac OS X, frames with this style will be shown with a metallic look. This is an extra style."/>
	</property>
	<property name="center" type="option"		help="Centers the dialog box on the display in the chosen direction.">
	  <option name=""/>
      <option name="wxHORIZONTAL"/>
      <option name="wxVERTICAL"/>
      <option name="wxBOTH"/>
	</property>
	<property name="event_handler" type="option" help="For C++ Only.&#x0A;The way how to declare and implement event handlers.">
	  <option name="decl_pure_virtual" help="Only declare event handlers as pure virtual methods."/>
	  <option name="decl" help="Declare event handlers but don't generate default implementation. Implementation should be done in separate .cpp file (Not in a generated!)."/>
	  <option name="impl_virtual" help="Declare event handlers as virtual methods and generate default implementation."/>
	  impl_virtual
	</property>
	<event name="OnInitDialog" class="wxInitDialogEvent" help="Process a wxEVT_INIT_DIALOG event. A wxEVT_INIT_DIALOG is sent as a dialog or panel is being initialized." />
  </objectinfo>

</package>
