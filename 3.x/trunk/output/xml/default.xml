<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<package name="default" desc="Default objects, do not edit this file">
  <objectinfo class="Project" smallIcon="project.xpm" type="project">
    <property name="name" type="text">MyProject</property>
    <property name="path" type="path" help="The path to generated files">.</property>
    <property name="file" type="text" help="The filenames for generated files" />
    <property name="relative_path" type="bool" help="Use relative paths for external files ( e.g. image files )">
		1
	</property>
	<property name="first_id" type="text" help="All GUI controls have an interger ID, this is the value for the first control, each additional control with increment by 1.">
		1000
	</property>
    <property name="code_generation" type="bitlist">
      <option name="C++" help="Generate C++ Code" />
      <option name="XRC" help="Generate XRC Code"/>
      C++
	</property>
	<category name="C++ Properties">
		<property name="use_enum" type="bool" help="For C++ Only.&#x0A;Generate an enumeration for control IDs instead of a list of #defines">0</property>
		<property name="internationalize" type="bool" help="For C++ Only.&#x0A;Generate strings with _() macro instead of wxT() macro. This allows for translation.">0</property>
		<property name="use_microsoft_bom" type="bool" help="For C++ and WXMSW Only.&#x0A;Files are generated with UTF-8 encoding. Microsoft compiliers expect a specific byte sequence at the beginning of a file. GCC does NOT expect this. Only set this to true when using a Microsoft compiler.">0</property>
		<property name="precompiled_header" type="text" help="For C++ Only.&#x0A;The exact code to be generated at the top of the source file to support precompiled headers. For example, to include wxprec.h, the value of this property should be:&#x0A;#include &lt;wx/wxprec.h&gt;"/>
		<property name="class_decoration" type="parent" help="For C++ Only.&#x0A;Used to decorate classes with DLL export macros.">
		  <child name="decoration" help="The name of the macro or the dll export decoration."/>
		  <child name="header" help="Optional header file where the export macro is defined."/>
	    </property>
		<property name="encoding" type="option" help="">
		  <option name="UTF-8" />
		  <option name="ANSI" />UTF-8
		</property>
		<property name="namespace" type="stringlist" help="For C++ Only.&#x0A;Namespaces to wrap class declarations in."/>
		<property name="event_generation" type="option" help="For C++ Only.&#x0A;Type of event connection to generate.">
		  <option name="connect" help="Use the Connect() function to link event handlers to events."/>
		  <option name="table" help="Use event macro tables to link event handlers to events."/>
		  connect
		</property>
		<property name="event_handler" type="option" help="For C++ Only.&#x0A;The way how to declarate and implement event handlers.">
		  <option name="decl_pure_virtual" help="Only declare event handlers as pure virtual methods."/>
		  <option name="decl_virtual" help="Declare event handlers as virtual methods but don't generate default implementation. Implementation should be done in separate .cpp file (Not in a generated!)."/>
		  <option name="decl" help="Declare event handlers but don't generate default implementation. Implementation should be done in separate .cpp file (Not in a generated!)."/>
		  <option name="impl_virtual" help="Declare event handlers as virtual methods and generate default implementation."/>
		  impl_virtual
		</property>
		<property name="disconnect_events" type="bool" help="For event_generation=connect Only.&#x0A;Disconnect events in the destructor.">
		  1
		</property>
		<property name="help_provider" type="option" help="For C++ Only.&#x0A;The class of help provider to use for context-sensitive help.">
			<option name="none" help="No support for context-sensitive help."/>
			<option name="wxSimpleHelpProvider" help="Use wxSimpleHelpProvider to provide context-sensitive help."/>
			<option name="wxHelpControllerHelpProvider" help="Use wxHelpControllerHelpProvider to provide context-sensitive help."/>
			none
		</property>
	</category>
  </objectinfo>
  <objectinfo class="C++" smallIcon="c++.png" type="interface">
    <property name="permission" type="option" hidden="1">
      <option name="none" />
      <option name="private" />
      <option name="protected" />
      <option name="public" />protected</property>
  </objectinfo>
  <objectinfo class="wxWindow" smallIcon="wxwindow.png" type="interface">
	<property name="id" type="macro">wxID_ANY</property>
    <property name="pos" type="wxPoint"         help="Window position. The default is (-1, -1) which indicates that wxWidgets should generate a default position for the window."/>
    <property name="size" type="wxSize"         help="Window size. The default is (-1, -1) which indicates that wxWidgets should generate a default size for the window."/>
    <property name="minimum_size" type="wxSize" help="Sets the minimum size of the window, to indicate to the sizer layout mechanism that this is the minimum required size."/>
    <property name="maximum_size" type="wxSize" help="Sets the maximum size of the window, to indicate to the sizer layout mechanism that this is the maximum allowable size."/>
    <property name="font" type="wxFont"         help="Sets the font for this window. This should not be use for a parent window if you don't want its font to be inherited by its children"/>
    <property name="fg" type="wxColour"         help="Sets the foreground colour of the window."/>
    <property name="bg" type="wxColour"         help="Sets the background colour of the window."/>
    <property name="window_name" type="wxString"help="The name of the window. This parameter is used to associate a name with the item, allowing the application user to set Motif resource values for individual windows."/>
    <property name="window_style" type="bitlist">
      <option name="wxSIMPLE_BORDER"            help="Displays a thin border around the window. wxBORDER is the old name for this style."/>
      <option name="wxDOUBLE_BORDER"            help="Displays a double border. Windows and Mac only."/>
      <option name="wxSUNKEN_BORDER"            help="Displays a sunken border."/>
      <option name="wxRAISED_BORDER"            help="Displays a raised border."/>
      <option name="wxSTATIC_BORDER"            help="Displays a border suitable for a static control. Windows only."/>
      <option name="wxNO_BORDER"                help="Displays no border, overriding the default border style for the window."/>
      <option name="wxTRANSPARENT_WINDOW"       help="The window is transparent, that is, it will not receive paint events. Windows only."/>
      <option name="wxTAB_TRAVERSAL"            help="Use this to enable tab traversal for non-dialog windows."/>
      <option name="wxWANTS_CHARS"              help="Use this to indicate that the window wants to get all char/key events for all keys - even for keys like TAB or ENTER which are usually used for dialog navigation and which wouldn't be generated without this style. If you need to use this style in order to get the arrows or etc., but would still like to have normal keyboard navigation take place, you should create and send a wxNavigationKeyEvent in response to the key events for Tab and Shift-Tab."/>
      <option name="wxVSCROLL"                  help="Use this style to enable a vertical scrollbar."/>
      <option name="wxHSCROLL"                  help="Use this style to enable a horizontal scrollbar."/>
      <option name="wxALWAYS_SHOW_SB"           help="If a window has scrollbars, disable them instead of hiding them when they are not needed (i.e. when the size of the window is big enough to not require the scrollbars to navigate it). This style is currently only implemented for wxMSW and wxUniversal and does nothing on the other platforms."/>
      <option name="wxCLIP_CHILDREN"            help="Use this style to eliminate flicker caused by the background being repainted, then children being painted over them. Windows only."/>
      <option name="wxFULL_REPAINT_ON_RESIZE"   help="Use this style to force a complete redraw of the window whenever it is resized instead of redrawing just the part of the window affected by resizing. Note that this was the behaviour by default before 2.5.1 release and that if you experience redraw problems with code which previously used to work you may want to try this. Currently this style applies on GTK+ 2 and Windows only, and full repainting is always done on other platforms."/>
    </property>
    <property name="window_extra_style" type="bitlist">
      <option name="wxWS_EX_VALIDATE_RECURSIVELY"   help="By default, Validate/TransferDataTo/FromWindow() only work on direct children of the window (compatible behaviour). Set this flag to make them recursively descend into all subwindows." />
      <option name="wxWS_EX_BLOCK_EVENTS"           help="wxCommandEvents and the objects of the derived classes are forwarded to the parent window and so on recursively by default. Using this flag for the given window allows to block this propagation at this window, i.e. prevent the events from being propagated further upwards. Dialogs have this flag on by default." />
      <option name="wxWS_EX_TRANSIENT"              help="Don't use this window as an implicit parent for the other windows: this must be used with transient windows as otherwise there is the risk of creating a dialog/frame with this window as a parent which would lead to a crash if the parent is destroyed before the child." />
      <option name="wxWS_EX_PROCESS_IDLE"           help="This window should always process idle events, even if the mode set by wxIdleEvent::SetMode is wxIDLE_PROCESS_SPECIFIED." />
      <option name="wxWS_EX_PROCESS_UI_UPDATES"     help="This window should always process UI update events, even if the mode set by wxUpdateUIEvent::SetMode is wxUPDATE_UI_PROCESS_SPECIFIED." />
    </property>
	<category name="Validator">
		<property name = "validator_type" type="option" hidden="1" help="Type of a validator assigned to the window">
			<option name="wxDefaultValidator" help="Default validator (does nothing)"/>
			<option name="wxGenericValidator" help="Generic validator. Transfers data from/to window ."/>
			<option name="wxTextValidator" help="Text validator. Transfer data from/to window and allows basic data filtering."/>wxDefaultValidator
		</property>
    	<property name="validator_style" type="bitlist" help="Data filtering style for wxTextValidator.">
      		<option name="wxFILTER_NONE"   help="No filtering takes place." />
      		<option name="wxFILTER_ASCII"           help="Non-ASCII characters are filtered out." />
      		<option name="wxFILTER_ALPHA"              help="Non-alpha characters are filtered out." />
      		<option name="wxFILTER_ALPHANUMERIC"           help="Non-alphanumeric characters are filtered out." />
      		<option name="wxFILTER_NUMERIC"     help="Non-numeric characters are filtered out." />
			<option name="wxFILTER_INCLUDE_LIST"     help="Use an include list. The validator checks if the user input is on the list, complaining if not. See wxTextValidator::SetIncludes." />
			<option name="wxFILTER_EXCLUDE_LIST"     help="Use an exclude list. The validator checks if the user input is on the list, complaining if it is. See wxTextValidator::SetExcludes." />
			<option name="wxFILTER_INCLUDE_CHAR_LIST"     help="Use an include list. The validator checks if each input character is in the list (one character per list element), complaining if not. See wxTextValidator::SetIncludes." />
			<option name="wxFILTER_EXCLUDE_CHAR_LIST"     help="Use an include list. The validator checks if each input character is in the list (one character per list element), complaining if it is. See wxTextValidator::SetExcludes." />
			wxFILTER_NONE
    	</property>
		<property name="validator_variable" type="text" help="Name of a member variable associated with the validator" />
		<property name = "validator_data_type" type="option" hidden="1" help="Data type of the member variable">
			<option name="" help ="Undefined data type."/>
			<option name="bool" help="Logical value. This should be used for wxCheckBox and wxRadioButton." />
			<option name="int" help="Signed integer value. This should be used for wxGauge, wxScrollBar, wxRadioBox, wxSpinButton, wxChoice."/>
			<option name="wxString" help="String value. This should be used for wxButton, wxComboBox, wxStaticText, wxTextCtrl." />
			<option name="wxArrayInt" help="Array of integers. This should be used for wxListBox, wxCheckListBox." />
		</property>
	</category>
    <property name="tooltip" type="wxString_i18n"   help="Attach a tooltip to the window."/>
	<property name="context_help" type="wxString_i18n" help="Attach context-sensitive help to the window. Note: The Project's &quot;help_provider&quot; property must be set for context-sensitive help to work."/>
    <property name="enabled" type="bool"            help="Enable or disable the window for user input. Note that when a parent window is disabled, all of its children are disabled as well and they are reenabled again when the parent is.">1</property>
    <property name="hidden" type="bool"             help="Shows or hides the window.">0</property>
    <property name="subclass" type="parent" help="For easy use of custom widgets which are simple variations from standard ones, without requiring a new plugin for wxFB or a full xrc handler for wxWidgets. For C++, this replaces the name of the class. For XRC, this sets the subclass value on the object tag.">
		<child name="name" help="The name of the subclass."/>
		<child name="header" help="For C++ Only. The header to be included for the subclass."/>
	</property>
	<category name="wxKeyEvent" type="interface">
		<event name="OnChar" class="wxKeyEvent" help="Process a wxEVT_CHAR event." />
		<event name="OnKeyDown" class="wxKeyEvent" help="Process a wxEVT_KEY_DOWN event (any key has been pressed)." />
		<event name="OnKeyUp" class="wxKeyEvent" help="Process a wxEVT_KEY_UP event (any key has been released)." />
	  </category>
	  <category name="wxMouseEvent" type="interface">
		<event name="OnEnterWindow" class="wxMouseEvent" help="Process a wxEVT_ENTER_WINDOW event." />
		<event name="OnLeaveWindow" class="wxMouseEvent" help="Process a wxEVT_LEAVE_WINDOW event." />
		<event name="OnLeftDClick" class="wxMouseEvent" help="Process a wxEVT_LEFT_DCLICK event." />
		<event name="OnLeftDown" class="wxMouseEvent" help="Process a wxEVT_LEFT_DOWN event." />
		<event name="OnLeftUp" class="wxMouseEvent" help="Process a wxEVT_LEFT_UP event." />
		<event name="OnMiddleDClick" class="wxMouseEvent" help="Process a wxEVT_MIDDLE_DCLICK event." />
		<event name="OnMiddleDown" class="wxMouseEvent" help="Process a wxEVT_MIDDLE_DOWN event." />
		<event name="OnMiddleUp" class="wxMouseEvent" help="Process a wxEVT_MIDDLE_UP event." />
		<event name="OnMotion" class="wxMouseEvent" help="Process a wxEVT_MOTION event." />
		<event name="OnMouseEvents" class="wxMouseEvent" help="Process all mouse events." />
		<event name="OnMouseWheel" class="wxMouseEvent" help="Process a wxEVT_MOUSEWHEEL event." />
		<event name="OnRightDClick" class="wxMouseEvent" help="Process a wxEVT_RIGHT_DCLICK event." />
		<event name="OnRightDown" class="wxMouseEvent" help="Process a wxEVT_RIGHT_DOWN event." />
		<event name="OnRightUp" class="wxMouseEvent" help="Process a wxEVT_RIGHT_UP event." />
	  </category>
	  <category name="wxFocusEvent" type="interface">
		<event name="OnKillFocus" class="wxFocusEvent" help="Process a wxEVT_KILL_FOCUS event." />
		<event name="OnSetFocus" class="wxFocusEvent" help="Process a wxEVT_SET_FOCUS event." />
	  </category>	
	  <category name="Other Events" type="interface">
		<event name="OnEraseBackground" class="wxEraseEvent" help="Process a wxEVT_ERASE_BACKGROUND event." />
		<event name="OnPaint" class="wxPaintEvent" help="Process a wxEVT_PAINT event." />
		<event name="OnSize" class="wxSizeEvent" help="Process a wxEVT_SIZE event." />
		<event name="OnUpdateUI" class="wxUpdateUIEvent" help="Process a wxEVT_UPDATE_UI event." />
	  </category>
  </objectinfo>
  <objectinfo class="UserClasses" 	type="interface">
	<property name="name" type="text" />
	<property name="basename" type="text" />
	<property name="file" type="text"	/>
	<property name="gen_file" 		type="text"	/>
	<property name="type" 			type="text"	/>
  </objectinfo>
</package>
